@startuml C4_Context
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

title System Context diagram for Neighbours Platform

Person(client, "Client", "A user who needs services")
Person(contractor, "Contractor", "A user who provides services")
Person(admin, "Admin", "System administrator")

System(neighboursSystem, "Neigh App", "Allows clients to find contractors and manage tasks and payments")

System_Ext(paymentSystem, "Payment Gateway", "Processes payments via Stripe and PayPal")
System_Ext(emailSystem, "Email Service", "Sends notifications")

Rel(client, neighboursSystem, "Uses")
Rel(contractor, neighboursSystem, "Uses")
Rel(admin, neighboursSystem, "Manages")
Rel(neighboursSystem, paymentSystem, "Processes payments through")
Rel(neighboursSystem, emailSystem, "Sends emails using")

@enduml

@startuml Component_Diagram
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Component Diagram for Neighbours Platform

Container_Boundary(app, "App") {
    Component(layout, "Root Layout", "Server Component", "Base layout with providers")
    
    Container_Boundary(providers, "Providers") {
        Component(authProvider, "AuthProvider", "Client Component", "Handles authentication state")
        Component(socketProvider, "SocketProvider", "Client Component", "Manages WebSocket connections")
    }
    
    Container_Boundary(shared, "Shared Components") {
        Component(header, "Header", "Navigation and user controls")
        Component(footer, "Footer", "Site information and links")
        Component(taskComponents, "Task Components", "Task-related UI components")
        Component(chat, "Chat", "Real-time messaging components")
        Component(invoice, "Invoice", "Invoice generation and display")
    }
    
    Container_Boundary(ui, "UI Components") {
        Component(forms, "Form Components", "Input, Select, Textarea")
        Component(feedback, "Feedback Components", "Toast, Dialog, Alert")
        Component(navigation, "Navigation Components", "Dropdown, Sheet")
        Component(display, "Display Components", "Card, Avatar, Badge")
    }
    
    Container_Boundary(admin, "Admin Components") {
        Component(adminDashboard, "Admin Dashboard", "System statistics interface")
        Component(adminCharts, "Statistics Charts", "Task and user analytics")
        Component(adminUsers, "User Management", "User administration")
        Component(adminPayments, "Payment Overview", "Payment monitoring")
    }
}

' Relationships
Rel(layout, authProvider, "Uses")
Rel(layout, socketProvider, "Uses")

Rel(shared, ui, "Uses")
Rel(admin, ui, "Uses")

Rel(taskComponents, chat, "Integrates")
Rel(taskComponents, invoice, "Generates")

Rel(authProvider, header, "Provides auth state")
Rel(socketProvider, chat, "Provides real-time")

' Admin specific relationships
Rel(adminDashboard, adminCharts, "Displays")
Rel(adminCharts, taskComponents, "Reads statistics")

@enduml 
